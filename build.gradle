plugins {
    id 'java'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

group 'me.ebonjaeger'
version '0.0.1'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def bukkitVersion = "1.13.1-R0.1-SNAPSHOT"

repositories {
    mavenCentral()

    maven {
        url "https://hub.spigotmc.org/nexus/content/groups/public/"
    }

    maven {
        url = "https://repo.aikar.co/content/groups/aikar/"
    }
}

dependencies {
    testCompile(group: 'junit', name: 'junit', version: '4.12') {
        exclude group: 'org.hamcrest'
    }
    testCompile group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'
    testCompile(group: 'org.spigotmc', name: 'spigot-api', version: bukkitVersion) {
        exclude group: 'junit'
    }

    compileOnly ("org.spigotmc:spigot-api:" + bukkitVersion) {
        exclude group: 'junit'
        exclude group: 'org.yaml'
    }

    compile "ch.jalu:configme:1.0"
    compile "ch.jalu:injector:1.0"

    compile(group: 'com.zaxxer', name: 'HikariCP', version: '2.7.2') {
        exclude group: 'org.slf4j'
    }
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

    compile "co.aikar:acf-paper:0.5.0-SNAPSHOT"
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

shadowJar.relocate('ch.jalu', 'me.ebonjaeger.novuspunishment.libs')
shadowJar.relocate('javax', 'me.ebonjaeger.novuspunishment.libs')
shadowJar.relocate('com.zaxxer', 'me.ebonjaeger.novuspunishment.libs')
shadowJar.relocate('org.slf4j', 'me.ebonjaeger.novuspunishment.libs')
shadowJar.relocate('co.aikar', 'me.ebonjaeger.novuspunishment.libs')
shadowJar.relocate('net.jodah', 'me.ebonjaeger.novuspunishment.libs')
shadowJar.relocate('org.intellij', 'me.ebonjaeger.novuspunishment.libs')
shadowJar.relocate('org.jetbrains', 'me.ebonjaeger.novuspunishment.libs')
shadowJar.relocate('org.yaml', 'me.ebonjaeger.novuspunishment.libs')
shadowJar.archiveName = rootProject.name + '-' + rootProject.version + '.jar'

compileJava.dependsOn clean
build.dependsOn test
build.dependsOn shadowJar
